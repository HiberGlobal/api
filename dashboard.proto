syntax = "proto3";

import "public-api/map.proto";
import "public-api/modem.proto";
import "public-api/event.proto";

option java_multiple_files = false;
option java_package = "global.hiber.api.grpc.dashboard";
option java_outer_classname = "DashboardApi";

/* Dashboard calls related to the Hiber Dashboard
 */
package api.dashboard;

/* Get the data for the dashboard. This includes map data, message count and relevant status events.
 * MapSelection is used for the map data, as used in the MapService.
 * ModemMessageSelection is used to filter the messages used for the count by day.
 */
message DashboardRequest {
  message Response {
    // list of ground stations and their location
    repeated api.map.GroundStation ground_stations = 1;
    // list of map blocks and their modem count, for density map
    repeated api.map.MapBlock map_blocks = 2;
    map<string, int32> message_count_per_day = 3;
    // counts of the number of modems with warning and errors
    int32 modem_warning_count = 4;
    int32 modem_error_count = 5;
    // returns the latest 20 matching events, or an empty list if the event selection wasn't set
    repeated api.event.Event events = 6;
    DashboardRequest request = 7;
  }

  string account = 1;
  /** for ground stations and map blocks */
  api.map.MapSelection selection = 2;
  /** for modem messages */
  api.modem.ModemMessageSelection message_count_selection = 3;
  /** for events, only used when any value is set */
  api.event.EventSelection event_selection = 4;
}

service DashboardService {
  rpc Dashboard (DashboardRequest) returns (DashboardRequest.Response);
}
