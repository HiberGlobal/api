syntax = "proto3";

package hiber.dashboard;

import "event.proto";
import "map.proto";
import "modem.proto";

option java_multiple_files = false;
option java_package = "global.hiber.api.grpc.dashboard";
option java_outer_classname = "DashboardApi";
option go_package = "hiber";

/* Dashboard calls related to the Hiber Mission Control Dashboard
 */
service DashboardService {
    rpc Dashboard (DashboardRequest) returns (DashboardRequest.Response);
}

/* Get the data for the dashboard. This includes map data, message count and relevant status events.
 * MapSelection is used for the map data, as used in the MapService.
 * ModemMessageSelection is used to filter the messages used for the count by day.
 */
message DashboardRequest {
    message Response {
        /* List of ground stations and their location. */
        repeated hiber.map.GroundStation ground_stations = 1 [deprecated=true];
        /* List of map blocks and their modem count, for density map. */
        repeated hiber.map.MapBlock map_blocks = 2 [deprecated=true];
        repeated hiber.modem.MessageCountRequest.Response.MessageCount message_count_per_day = 3;
        /* Counts of the number of modems with warning and errors. */
        int32 modem_warning_count = 4;
        int32 modem_error_count = 5;
        reserved 6;
        DashboardRequest request = 7;
        /* Returns event bundles matching the given selection, or an empty list if the event selection wasn't set. */
        repeated hiber.event.BundledEvent events = 8;
        repeated hiber.map.Satellite satellites = 9 [deprecated=true];
    }

    /* Pick the organization to use (/impersonate). If unset, your default organization is used. */
    string organization = 1;

    /* Selection for ground stations and map blocks. */
    hiber.map.MapSelection selection = 2 [deprecated=true];

    /* Selection for modem messages. */
    hiber.modem.ModemMessageSelection message_count_selection = 3;

    /* Selection for bundled events, only used when any value is set. */
    hiber.event.EventSelection event_selection = 4;

    /* Numeric timezone offset for message count, day grouping. Optional. */
    int32 time_zone_offset = 5;

    /* Timezone string for message count, day grouping. Optional. */
    string time_zone = 6;
}

