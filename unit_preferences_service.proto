syntax = "proto3";

package hiber.value;

import "field.proto";
import "value.proto";

option java_multiple_files = true;
option java_package = "global.hiber.api.grpc.value";
option go_package = "hiber";

service UnitPreferencesService {
    rpc UnitPreferences (UnitPreferences.Request) returns (UnitPreferences.Response);
}

/* The preferred units for the current user. */
message UnitPreferences {
    enum UnitCategory {
        METRIC = 0;
        IMPERIAL = 1;
    }

    /* User preferences for distance values. */
    message DistancePreference {
        /* Unit category (metric / imperial) to convert distance values to. */
        UnitCategory unit_category = 1;

        /* Optional formatting options for values (rounding, etc). */
        field.Field.Numeric.Format format = 2;
    }

    /* Optional distance preference for the current user. */
    oneof distance {
        DistancePreference distance_preference = 1;
        bool no_distance_preference = 11;
    }

    /* User preferences for mass values. */
    message FlowPreference {
        value.Value.Numeric.Flow.Unit unit = 1;

        /* Optional formatting options for values (rounding, etc). */
        field.Field.Numeric.Format format = 2;
    }

    /* Optional mass preference for the current user. */
    oneof flow {
        FlowPreference flow_preference = 10;
        bool no_flow_preference = 20;
    }

    /* User preferences for fuel efficiency values. */
    message FuelEfficiencyPreference {
        value.Value.Numeric.FuelEfficiency.Unit unit = 1;

        /* Optional formatting options for values (rounding, etc). */
        field.Field.Numeric.Format format = 2;
    }

    /* Optional fuel efficiency preference for the current user. */
    oneof fuel_efficiency {
        FuelEfficiencyPreference fuel_efficiency_preference = 2;
        bool no_fuel_efficiency_preference = 12;
    }

    /* User preferences for mass values. */
    message MassPreference {
        /* Unit category (metric / imperial) to convert mass values to. */
        UnitCategory unit_category = 1;

        /* Optional formatting options for values (rounding, etc). */
        field.Field.Numeric.Format format = 2;
    }

    /* Optional mass preference for the current user. */
    oneof mass {
        MassPreference mass_preference = 9;
        bool no_mass_preference = 19;
    }

    /* User preferences for percentage values. */
    message PercentagePreference {

        /* Optional formatting options for values (rounding, etc). */
        field.Field.Numeric.Format format = 1;
    }

    /* Optional percentage preference for the current user. */
    oneof percentage {
        PercentagePreference percentage_preference = 3;
        bool no_percentage_preference = 13;
    }

    /* User preferences for pressure values. */
    message PressurePreference {
        value.Value.Numeric.Pressure.Unit unit = 1;

        /* Optional formatting options for values (rounding, etc). */
        field.Field.Numeric.Format format = 2;
    }

    /* Optional pressure preference for the current user. */
    oneof pressure {
        PressurePreference pressure_preference = 4;
        bool no_pressure_preference = 14;
    }

    /* User preferences for speed values. */
    message SpeedPreference {
        /* Unit category (metric / imperial) to convert speed values to. */
        UnitCategory unit_category = 1;

        /* Optional formatting options for values (rounding, etc). */
        field.Field.Numeric.Format format = 2;
    }

    /* Optional speed preference for the current user. */
    oneof speed {
        SpeedPreference speed_preference = 5;
        bool no_speed_preference = 15;
    }

    /* User preferences for temperature values. */
    message TemperaturePreference {
        value.Value.Numeric.Temperature.Unit unit = 1;

        /* Optional formatting options for values (rounding, etc). */
        field.Field.Numeric.Format format = 2;
    }

    /* Optional temperature preference for the current user. */
    oneof temperature {
        TemperaturePreference temperature_preference = 6;
        bool no_temperature_preference = 16;
    }

    /* User preferences for voltage values. */
    message VoltagePreference {
        value.Value.Numeric.Voltage.Unit unit = 1;

        /* Optional formatting options for values (rounding, etc). */
        field.Field.Numeric.Format format = 2;
    }

    /* Optional voltage preference for the current user. */
    oneof voltage {
        VoltagePreference voltage_preference = 7;
        bool no_voltage_preference = 17;
    }

    /* User preferences for volume values. */
    message VolumePreference {
        /* Unit category (metric / imperial) to convert volume values to. */
        UnitCategory unit_category = 1;

        /* Optional formatting options for values (rounding, etc). */
        field.Field.Numeric.Format format = 2;
    }

    /* Optional volume preference for the current user. */
    oneof volume {
        VolumePreference volume_preference = 8;
        bool no_volume_preference = 18;
    }

    message Request {
        /* Update or remove the distance preference. */
        oneof distance {
            DistancePreference update_distance_preference = 1;
            bool remove_distance_preference = 11;
        }

        /* Update or remove the mass preference. */
        oneof flow {
            FlowPreference update_flow_preference = 10;
            bool remove_flow_preference = 20;
        }

        /* Update or remove the fuel efficiency preference. */
        oneof fuel_efficiency {
            FuelEfficiencyPreference update_fuel_efficiency_preference = 2;
            bool remove_fuel_efficiency_preference = 12;
        }

        /* Update or remove the mass preference. */
        oneof mass {
            MassPreference update_mass_preference = 9;
            bool remove_mass_preference = 19;
        }

        /* Update or remove the percentage preference. */
        oneof percentage {
            PercentagePreference update_percentage_preference = 3;
            bool remove_percentage_preference = 13;
        }

        /* Update or remove the pressure preference. */
        oneof pressure {
            PressurePreference update_pressure_preference = 4;
            bool remove_pressure_preference = 14;
        }

        /* Update or remove the speed preference. */
        oneof speed {
            SpeedPreference update_speed_preference = 5;
            bool remove_speed_preference = 15;
        }

        /* Update or remove the temperature preference. */
        oneof temperature {
            TemperaturePreference update_temperature_preference = 6;
            bool remove_temperature_preference = 16;
        }

        /* Update or remove the voltage preference. */
        oneof voltage {
            VoltagePreference update_voltage_preference = 7;
            bool remove_voltage_preference = 17;
        }

        /* Update or remove the volume preference. */
        oneof volume {
            VolumePreference update_volume_preference = 8;
            bool remove_volume_preference = 18;
        }
    }

    message Response {
        UnitPreferences preferences = 1;
    }
}
